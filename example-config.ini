# Configuration for the feature extraction, unpacking, clustering and validation
#   Most values are boolean:
#   0 = False
#   1 = True

[general]
# Specify if the processes should print the progress during execution
print_progress = 1


[feature_extraction]
# Specify if the feature extraction process should extract all features
#   regardless of whether the feature will be used in clustering.
extract_all_features = 1

# Specify if files should be attempted unpacked even 
#   if they are not detected as being packed.
attempt_unpack_all_files = 0

[unpacking]
# Specify if unpacked files should be stored (1) 
#   or deleted (0) after extracting features.
store_unpacked = 0

# Path to a folder where unpacked files will be stored
#   if store_unpacked is True (1).
# Ensure that the folder exists or the script has 
#   the privileges required to create the directory.
directory = /files/unpacked_files/

[clustering]
# Specify if the clustering should utilize the indicated features.
#   If [feature_extraction]->extract_all_features is 0 (False), 
#   the feature will not be extracted either.
#   TODO: Clustering with contained PE files is still WIP
cluster_with_icon = 1
cluster_with_resources = 1
cluster_with_imphash = 1
cluster_with_tlsh = 1
cluster_with_contained_pe = 0
label_on_contained_pe = 1

# Specify if vhash should be used for clustering. Since 
# vhash is prorietary and cannot be extracted from files,
# a pickle with translations between sha256sums and vhash
# must be present before enabling this.
cluster_with_vhash = 0

# Specify if packed files should be clustered as if they were not obfuscated
# Should be fine since clusters with packed files from many families
#   should not be given a label.
cluster_with_packed_files = 1

# Specify if the algorithm should attempt to update the labels of clusters
# when an item has been labelled during real-time clustering (validation)
# When this value is true, the clustering is a form of semi-supervised learning.
update_cluster_labels_during_validation = 1

# The threshold distance score for deciding if two files are related using TLSH.
#   See https://documents.trendmicro.com/assets/wp/wp-locality-sensitive-hash.pdf
#   (page 12) for details of FPR and TPR at various thresholds
tlsh_threshold = 100

# Specify if the tlsh clustering should be performed without
#   updating centroids after adding items to cluster.
tlsh_fast_clustering = 0


[queue_managers]
# Specify the IP address of host the queue managers will be running.
# Currently the implementation can only run on a single host.
#   If the feature extraction is to be distributed over multiple
#   hosts, the filepaths must point to a file share that
#   is accessable to all hosts over the network.
#   A new script must also be made that only contains the code
#   that only creates feature extraction workers and connects 
#   them to the "job" and "job done" queues.
ip = 127.0.0.1

# Specify the port of the feature extraction job queue
job_port = 50000

# Specify the port of the feature extraction job done queue
done_port = 50001

# Timeout in seconds for how long the the processes collecting
#   metadata should wait for more files from the feature 
#   extraction workers before stopping collection.
#   TODO: Does multiprocessing allow checking if a process has finished?
timeout = 30

# Specify the password connecting to the queue
# A key should be required since the process will unpickle
#   data recieved at to the port.
# A key must be provided before running the clustering.
# The installation script will provide a random key
;key = <alphanumeric password>
